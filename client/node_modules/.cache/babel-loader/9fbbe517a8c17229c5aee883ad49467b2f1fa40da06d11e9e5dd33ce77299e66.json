{"ast":null,"code":"var _jsxFileName = \"/workspace/client/src/pages/ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Card, Descriptions, Button, message, Spin, Alert, Tabs, Modal, Form, Input, Select, Progress, Tag, Space, Collapse, Typography, Row, Col, Divider } from 'antd';\nimport { ArrowLeftOutlined, QuestionCircleOutlined, CheckCircleOutlined, PlusOutlined, EditOutlined, BulbOutlined } from '@ant-design/icons';\nimport { projectAPI, questionAPI } from '../services/api';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Panel\n} = Collapse;\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Title,\n  Text\n} = Typography;\nconst ProjectDetail = () => {\n  _s();\n  var _project$status;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [project, setProject] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [generating, setGenerating] = useState(false);\n  const [answerModalVisible, setAnswerModalVisible] = useState(false);\n  const [addQuestionModalVisible, setAddQuestionModalVisible] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [answerForm] = Form.useForm();\n  const [questionForm] = Form.useForm();\n  useEffect(() => {\n    loadProjectData();\n  }, [id]);\n  const loadProjectData = async () => {\n    try {\n      setLoading(true);\n      const [projectResponse, questionsResponse] = await Promise.all([projectAPI.getById(id), questionAPI.getByProjectId(id).catch(() => ({\n        data: []\n      }))]);\n      setProject(projectResponse.data);\n      setQuestions(questionsResponse.data);\n    } catch (error) {\n      message.error('Failed to load project data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateQuestions = async () => {\n    try {\n      setGenerating(true);\n      const response = await questionAPI.generate(id);\n      message.success(`Generated ${response.data.question_count} questions successfully!`);\n      // Reload questions\n      const questionsResponse = await questionAPI.getByProjectId(id);\n      setQuestions(questionsResponse.data);\n    } catch (error) {\n      message.error('Failed to generate questions');\n    } finally {\n      setGenerating(false);\n    }\n  };\n  const handleAnswerQuestion = question => {\n    setSelectedQuestion(question);\n    answerForm.setFieldsValue({\n      answer: question.answer || '',\n      notes: question.notes || ''\n    });\n    setAnswerModalVisible(true);\n  };\n  const handleSaveAnswer = async values => {\n    try {\n      await questionAPI.updateAnswer(selectedQuestion.id, values);\n      message.success('Answer saved successfully');\n      setAnswerModalVisible(false);\n      answerForm.resetFields();\n      setSelectedQuestion(null);\n      // Reload questions\n      const questionsResponse = await questionAPI.getByProjectId(id);\n      setQuestions(questionsResponse.data);\n    } catch (error) {\n      message.error('Failed to save answer');\n    }\n  };\n  const handleAddCustomQuestion = async values => {\n    try {\n      await questionAPI.addCustom(id, values);\n      message.success('Custom question added successfully');\n      setAddQuestionModalVisible(false);\n      questionForm.resetFields();\n      // Reload questions\n      const questionsResponse = await questionAPI.getByProjectId(id);\n      setQuestions(questionsResponse.data);\n    } catch (error) {\n      message.error('Failed to add custom question');\n    }\n  };\n  const getPriorityLabel = priority => {\n    if (priority <= 1) return {\n      text: 'HIGH',\n      color: 'red'\n    };\n    if (priority <= 2) return {\n      text: 'MEDIUM',\n      color: 'orange'\n    };\n    return {\n      text: 'LOW',\n      color: 'green'\n    };\n  };\n  const getQuestionsByCategory = () => {\n    const categories = {};\n    questions.forEach(question => {\n      if (!categories[question.category]) {\n        categories[question.category] = [];\n      }\n      categories[question.category].push(question);\n    });\n    return categories;\n  };\n  const answeredQuestions = questions.filter(q => q.is_answered).length;\n  const completionRate = questions.length > 0 ? Math.round(answeredQuestions / questions.length * 100) : 0;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Project not found\",\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this);\n  }\n  const questionsByCategory = getQuestionsByCategory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this),\n        onClick: () => navigate('/projects'),\n        style: {\n          marginRight: 16\n        },\n        children: \"Back to Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this),\n        onClick: () => navigate(`/projects/${id}/edit`),\n        children: \"Edit Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: project.name,\n      style: {\n        marginBottom: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Descriptions, {\n            column: 1,\n            children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Client\",\n              children: project.client_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Industry\",\n              children: project.industry || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Company Size\",\n              children: project.company_size || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Status\",\n              children: /*#__PURE__*/_jsxDEV(Tag, {\n                color: project.status === 'active' ? 'green' : 'blue',\n                children: (_project$status = project.status) === null || _project$status === void 0 ? void 0 : _project$status.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Descriptions, {\n            column: 1,\n            children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Start Date\",\n              children: project.start_date ? dayjs(project.start_date).format('MMM DD, YYYY') : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Expected Completion\",\n              children: project.expected_completion ? dayjs(project.expected_completion).format('MMM DD, YYYY') : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Created\",\n              children: dayjs(project.created_at).format('MMM DD, YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), project.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"questions\",\n      children: /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(QuestionCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), \"Questions (\", questions.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 23\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          size: \"small\",\n          style: {\n            marginBottom: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [16, 16],\n            align: \"middle\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              sm: 12,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                direction: \"vertical\",\n                style: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  strong: true,\n                  children: \"Completion Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Progress, {\n                  percent: completionRate,\n                  status: completionRate === 100 ? 'success' : 'active',\n                  format: () => `${answeredQuestions}/${questions.length}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              sm: 12,\n              md: 16,\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                wrap: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  icon: /*#__PURE__*/_jsxDEV(BulbOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 27\n                  }, this),\n                  onClick: handleGenerateQuestions,\n                  loading: generating,\n                  children: \"Generate Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 27\n                  }, this),\n                  onClick: () => setAddQuestionModalVisible(true),\n                  children: \"Add Custom Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"secondary\",\n                  children: [answeredQuestions, \" of \", questions.length, \" questions answered\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), Object.keys(questionsByCategory).length > 0 ? /*#__PURE__*/_jsxDEV(Collapse, {\n          defaultActiveKey: Object.keys(questionsByCategory),\n          ghost: true,\n          children: Object.entries(questionsByCategory).map(([category, categoryQuestions]) => /*#__PURE__*/_jsxDEV(Panel, {\n            header: /*#__PURE__*/_jsxDEV(Space, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 500\n                },\n                children: category.replace('_', ' ').toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                color: \"blue\",\n                children: [categoryQuestions.length, \" questions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                color: \"green\",\n                children: [categoryQuestions.filter(q => q.is_answered).length, \" answered\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 21\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              direction: \"vertical\",\n              style: {\n                width: '100%'\n              },\n              size: \"middle\",\n              children: categoryQuestions.map((question, index) => {\n                const priorityInfo = getPriorityLabel(question.priority);\n                return /*#__PURE__*/_jsxDEV(Card, {\n                  className: `question-card ${question.is_answered ? 'answered' : ''}`,\n                  size: \"small\",\n                  title: /*#__PURE__*/_jsxDEV(Space, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Q\", index + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                      color: priorityInfo.color,\n                      size: \"small\",\n                      children: priorityInfo.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 31\n                    }, this), question.is_answered && /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n                      style: {\n                        color: '#52c41a'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 56\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 29\n                  }, this),\n                  extra: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    onClick: () => handleAnswerQuestion(question),\n                    children: question.is_answered ? 'Edit Answer' : 'Answer'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 29\n                  }, this),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginBottom: 12\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      strong: true,\n                      children: question.question\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 27\n                  }, this), question.is_answered && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      type: \"secondary\",\n                      children: \"Answer:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 4,\n                        padding: '8px 12px',\n                        background: '#f6ffed',\n                        borderRadius: 4\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Text, {\n                        children: question.answer\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 31\n                    }, this), question.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        type: \"secondary\",\n                        children: \"Notes:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          marginTop: 4\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Text, {\n                          italic: true,\n                          children: question.notes\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 29\n                  }, this)]\n                }, question.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this)\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Questions Generated Yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click \\\"Generate Questions\\\" to create tailored WMS questions based on the client's industry and requirements.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, \"questions\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: `Answer Question`,\n      open: answerModalVisible,\n      onCancel: () => {\n        setAnswerModalVisible(false);\n        answerForm.resetFields();\n        setSelectedQuestion(null);\n      },\n      onOk: () => answerForm.submit(),\n      width: 600,\n      children: selectedQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 16,\n            padding: 12,\n            background: '#f5f5f5',\n            borderRadius: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            strong: true,\n            children: selectedQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          form: answerForm,\n          layout: \"vertical\",\n          onFinish: handleSaveAnswer,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"answer\",\n            label: \"Answer\",\n            rules: [{\n              required: true,\n              message: 'Please provide an answer'\n            }],\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              rows: 4,\n              placeholder: \"Enter the client's response to this question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"notes\",\n            label: \"Notes (Optional)\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              rows: 3,\n              placeholder: \"Add any additional notes, context, or follow-up actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add Custom Question\",\n      open: addQuestionModalVisible,\n      onCancel: () => {\n        setAddQuestionModalVisible(false);\n        questionForm.resetFields();\n      },\n      onOk: () => questionForm.submit(),\n      width: 600,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: questionForm,\n        layout: \"vertical\",\n        onFinish: handleAddCustomQuestion,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"question\",\n          label: \"Question\",\n          rules: [{\n            required: true,\n            message: 'Please enter the question'\n          }],\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            rows: 3,\n            placeholder: \"Enter your custom question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"category\",\n          label: \"Category\",\n          initialValue: \"custom\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"custom\",\n              children: \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"wms_processes\",\n              children: \"WMS Processes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"technical_architecture\",\n              children: \"Technical Architecture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"business_requirements\",\n              children: \"Business Requirements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"integration\",\n              children: \"Integration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"client_specific\",\n              children: \"Client Specific\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"priority\",\n          label: \"Priority\",\n          initialValue: 2,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: 1,\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: 2,\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: 3,\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"0Zzpk17O59E36xHsFwZ5JDkQkZY=\", false, function () {\n  return [useParams, useNavigate, Form.useForm, Form.useForm];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Card","Descriptions","Button","message","Spin","Alert","Tabs","Modal","Form","Input","Select","Progress","Tag","Space","Collapse","Typography","Row","Col","Divider","ArrowLeftOutlined","QuestionCircleOutlined","CheckCircleOutlined","PlusOutlined","EditOutlined","BulbOutlined","projectAPI","questionAPI","dayjs","jsxDEV","_jsxDEV","TabPane","Panel","TextArea","Option","Title","Text","ProjectDetail","_s","_project$status","id","navigate","project","setProject","questions","setQuestions","loading","setLoading","generating","setGenerating","answerModalVisible","setAnswerModalVisible","addQuestionModalVisible","setAddQuestionModalVisible","selectedQuestion","setSelectedQuestion","answerForm","useForm","questionForm","loadProjectData","projectResponse","questionsResponse","Promise","all","getById","getByProjectId","catch","data","error","handleGenerateQuestions","response","generate","success","question_count","handleAnswerQuestion","question","setFieldsValue","answer","notes","handleSaveAnswer","values","updateAnswer","resetFields","handleAddCustomQuestion","addCustom","getPriorityLabel","priority","text","color","getQuestionsByCategory","categories","forEach","category","push","answeredQuestions","filter","q","is_answered","length","completionRate","Math","round","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","type","questionsByCategory","style","marginBottom","icon","onClick","marginRight","title","name","gutter","xs","md","column","Item","label","client_name","industry","company_size","status","toUpperCase","start_date","format","expected_completion","created_at","description","marginTop","level","defaultActiveKey","tab","align","sm","direction","width","strong","percent","wrap","Object","keys","ghost","entries","map","categoryQuestions","header","fontWeight","replace","index","priorityInfo","extra","padding","background","borderRadius","italic","open","onCancel","onOk","submit","form","layout","onFinish","rules","required","rows","placeholder","initialValue","value","_c","$RefreshReg$"],"sources":["/workspace/client/src/pages/ProjectDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { \n  Card, \n  Descriptions, \n  Button, \n  message, \n  Spin, \n  Alert,\n  Tabs,\n  Modal,\n  Form,\n  Input,\n  Select,\n  Progress,\n  Tag,\n  Space,\n  Collapse,\n  Typography,\n  Row,\n  Col,\n  Divider\n} from 'antd';\nimport {\n  ArrowLeftOutlined,\n  QuestionCircleOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  BulbOutlined\n} from '@ant-design/icons';\nimport { projectAPI, questionAPI } from '../services/api';\nimport dayjs from 'dayjs';\n\nconst { TabPane } = Tabs;\nconst { Panel } = Collapse;\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst { Title, Text } = Typography;\n\nconst ProjectDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [project, setProject] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [generating, setGenerating] = useState(false);\n  const [answerModalVisible, setAnswerModalVisible] = useState(false);\n  const [addQuestionModalVisible, setAddQuestionModalVisible] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [answerForm] = Form.useForm();\n  const [questionForm] = Form.useForm();\n\n  useEffect(() => {\n    loadProjectData();\n  }, [id]);\n\n  const loadProjectData = async () => {\n    try {\n      setLoading(true);\n      const [projectResponse, questionsResponse] = await Promise.all([\n        projectAPI.getById(id),\n        questionAPI.getByProjectId(id).catch(() => ({ data: [] }))\n      ]);\n      \n      setProject(projectResponse.data);\n      setQuestions(questionsResponse.data);\n    } catch (error) {\n      message.error('Failed to load project data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGenerateQuestions = async () => {\n    try {\n      setGenerating(true);\n      const response = await questionAPI.generate(id);\n      message.success(`Generated ${response.data.question_count} questions successfully!`);\n      // Reload questions\n      const questionsResponse = await questionAPI.getByProjectId(id);\n      setQuestions(questionsResponse.data);\n    } catch (error) {\n      message.error('Failed to generate questions');\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const handleAnswerQuestion = (question) => {\n    setSelectedQuestion(question);\n    answerForm.setFieldsValue({\n      answer: question.answer || '',\n      notes: question.notes || ''\n    });\n    setAnswerModalVisible(true);\n  };\n\n  const handleSaveAnswer = async (values) => {\n    try {\n      await questionAPI.updateAnswer(selectedQuestion.id, values);\n      message.success('Answer saved successfully');\n      setAnswerModalVisible(false);\n      answerForm.resetFields();\n      setSelectedQuestion(null);\n      // Reload questions\n      const questionsResponse = await questionAPI.getByProjectId(id);\n      setQuestions(questionsResponse.data);\n    } catch (error) {\n      message.error('Failed to save answer');\n    }\n  };\n\n  const handleAddCustomQuestion = async (values) => {\n    try {\n      await questionAPI.addCustom(id, values);\n      message.success('Custom question added successfully');\n      setAddQuestionModalVisible(false);\n      questionForm.resetFields();\n      // Reload questions\n      const questionsResponse = await questionAPI.getByProjectId(id);\n      setQuestions(questionsResponse.data);\n    } catch (error) {\n      message.error('Failed to add custom question');\n    }\n  };\n\n  const getPriorityLabel = (priority) => {\n    if (priority <= 1) return { text: 'HIGH', color: 'red' };\n    if (priority <= 2) return { text: 'MEDIUM', color: 'orange' };\n    return { text: 'LOW', color: 'green' };\n  };\n\n  const getQuestionsByCategory = () => {\n    const categories = {};\n    questions.forEach(question => {\n      if (!categories[question.category]) {\n        categories[question.category] = [];\n      }\n      categories[question.category].push(question);\n    });\n    return categories;\n  };\n\n  const answeredQuestions = questions.filter(q => q.is_answered).length;\n  const completionRate = questions.length > 0 ? Math.round((answeredQuestions / questions.length) * 100) : 0;\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  if (!project) {\n    return <Alert message=\"Project not found\" type=\"error\" />;\n  }\n\n  const questionsByCategory = getQuestionsByCategory();\n\n  return (\n    <div>\n      <div style={{ marginBottom: 24 }}>\n        <Button \n          icon={<ArrowLeftOutlined />} \n          onClick={() => navigate('/projects')}\n          style={{ marginRight: 16 }}\n        >\n          Back to Projects\n        </Button>\n        <Button \n          icon={<EditOutlined />} \n          onClick={() => navigate(`/projects/${id}/edit`)}\n        >\n          Edit Project\n        </Button>\n      </div>\n\n      <Card title={project.name} style={{ marginBottom: 24 }}>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} md={12}>\n            <Descriptions column={1}>\n              <Descriptions.Item label=\"Client\">{project.client_name}</Descriptions.Item>\n              <Descriptions.Item label=\"Industry\">{project.industry || '-'}</Descriptions.Item>\n              <Descriptions.Item label=\"Company Size\">{project.company_size || '-'}</Descriptions.Item>\n              <Descriptions.Item label=\"Status\">\n                <Tag color={project.status === 'active' ? 'green' : 'blue'}>\n                  {project.status?.toUpperCase()}\n                </Tag>\n              </Descriptions.Item>\n            </Descriptions>\n          </Col>\n          <Col xs={24} md={12}>\n            <Descriptions column={1}>\n              <Descriptions.Item label=\"Start Date\">\n                {project.start_date ? dayjs(project.start_date).format('MMM DD, YYYY') : '-'}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Expected Completion\">\n                {project.expected_completion ? dayjs(project.expected_completion).format('MMM DD, YYYY') : '-'}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Created\">\n                {dayjs(project.created_at).format('MMM DD, YYYY')}\n              </Descriptions.Item>\n            </Descriptions>\n          </Col>\n        </Row>\n        \n        {project.description && (\n          <div style={{ marginTop: 16 }}>\n            <Title level={5}>Description</Title>\n            <Text>{project.description}</Text>\n          </div>\n        )}\n      </Card>\n\n      <Tabs defaultActiveKey=\"questions\">\n        <TabPane tab={<span><QuestionCircleOutlined />Questions ({questions.length})</span>} key=\"questions\">\n          {/* Progress and Actions */}\n          <Card size=\"small\" style={{ marginBottom: 16 }}>\n            <Row gutter={[16, 16]} align=\"middle\">\n              <Col xs={24} sm={12} md={8}>\n                <Space direction=\"vertical\" style={{ width: '100%' }}>\n                  <Text strong>Completion Progress</Text>\n                  <Progress \n                    percent={completionRate} \n                    status={completionRate === 100 ? 'success' : 'active'}\n                    format={() => `${answeredQuestions}/${questions.length}`}\n                  />\n                </Space>\n              </Col>\n              <Col xs={24} sm={12} md={16}>\n                <Space wrap>\n                  <Button \n                    type=\"primary\"\n                    icon={<BulbOutlined />}\n                    onClick={handleGenerateQuestions}\n                    loading={generating}\n                  >\n                    Generate Questions\n                  </Button>\n                  <Button \n                    icon={<PlusOutlined />}\n                    onClick={() => setAddQuestionModalVisible(true)}\n                  >\n                    Add Custom Question\n                  </Button>\n                  <Text type=\"secondary\">\n                    {answeredQuestions} of {questions.length} questions answered\n                  </Text>\n                </Space>\n              </Col>\n            </Row>\n          </Card>\n\n          {/* Questions by Category */}\n          {Object.keys(questionsByCategory).length > 0 ? (\n            <Collapse defaultActiveKey={Object.keys(questionsByCategory)} ghost>\n              {Object.entries(questionsByCategory).map(([category, categoryQuestions]) => (\n                <Panel \n                  key={category}\n                  header={\n                    <Space>\n                      <span style={{ fontWeight: 500 }}>\n                        {category.replace('_', ' ').toUpperCase()}\n                      </span>\n                      <Tag color=\"blue\">{categoryQuestions.length} questions</Tag>\n                      <Tag color=\"green\">\n                        {categoryQuestions.filter(q => q.is_answered).length} answered\n                      </Tag>\n                    </Space>\n                  }\n                >\n                  <Space direction=\"vertical\" style={{ width: '100%' }} size=\"middle\">\n                    {categoryQuestions.map((question, index) => {\n                      const priorityInfo = getPriorityLabel(question.priority);\n                      return (\n                        <Card \n                          key={question.id}\n                          className={`question-card ${question.is_answered ? 'answered' : ''}`}\n                          size=\"small\"\n                          title={\n                            <Space>\n                              <span>Q{index + 1}</span>\n                              <Tag color={priorityInfo.color} size=\"small\">\n                                {priorityInfo.text}\n                              </Tag>\n                              {question.is_answered && <CheckCircleOutlined style={{ color: '#52c41a' }} />}\n                            </Space>\n                          }\n                          extra={\n                            <Button \n                              size=\"small\"\n                              onClick={() => handleAnswerQuestion(question)}\n                            >\n                              {question.is_answered ? 'Edit Answer' : 'Answer'}\n                            </Button>\n                          }\n                        >\n                          <div style={{ marginBottom: 12 }}>\n                            <Text strong>{question.question}</Text>\n                          </div>\n                          \n                          {question.is_answered && (\n                            <div>\n                              <Text type=\"secondary\">Answer:</Text>\n                              <div style={{ marginTop: 4, padding: '8px 12px', background: '#f6ffed', borderRadius: 4 }}>\n                                <Text>{question.answer}</Text>\n                              </div>\n                              {question.notes && (\n                                <div style={{ marginTop: 8 }}>\n                                  <Text type=\"secondary\">Notes:</Text>\n                                  <div style={{ marginTop: 4 }}>\n                                    <Text italic>{question.notes}</Text>\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </Card>\n                      );\n                    })}\n                  </Space>\n                </Panel>\n              ))}\n            </Collapse>\n          ) : (\n            <div className=\"empty-state\">\n              <h3>No Questions Generated Yet</h3>\n              <p>Click \"Generate Questions\" to create tailored WMS questions based on the client's industry and requirements.</p>\n            </div>\n          )}\n        </TabPane>\n      </Tabs>\n\n      {/* Answer Question Modal */}\n      <Modal\n        title={`Answer Question`}\n        open={answerModalVisible}\n        onCancel={() => {\n          setAnswerModalVisible(false);\n          answerForm.resetFields();\n          setSelectedQuestion(null);\n        }}\n        onOk={() => answerForm.submit()}\n        width={600}\n      >\n        {selectedQuestion && (\n          <div>\n            <div style={{ marginBottom: 16, padding: 12, background: '#f5f5f5', borderRadius: 4 }}>\n              <Text strong>{selectedQuestion.question}</Text>\n            </div>\n            \n            <Form\n              form={answerForm}\n              layout=\"vertical\"\n              onFinish={handleSaveAnswer}\n            >\n              <Form.Item\n                name=\"answer\"\n                label=\"Answer\"\n                rules={[{ required: true, message: 'Please provide an answer' }]}\n              >\n                <TextArea \n                  rows={4} \n                  placeholder=\"Enter the client's response to this question\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"notes\"\n                label=\"Notes (Optional)\"\n              >\n                <TextArea \n                  rows={3} \n                  placeholder=\"Add any additional notes, context, or follow-up actions\"\n                />\n              </Form.Item>\n            </Form>\n          </div>\n        )}\n      </Modal>\n\n      {/* Add Custom Question Modal */}\n      <Modal\n        title=\"Add Custom Question\"\n        open={addQuestionModalVisible}\n        onCancel={() => {\n          setAddQuestionModalVisible(false);\n          questionForm.resetFields();\n        }}\n        onOk={() => questionForm.submit()}\n        width={600}\n      >\n        <Form\n          form={questionForm}\n          layout=\"vertical\"\n          onFinish={handleAddCustomQuestion}\n        >\n          <Form.Item\n            name=\"question\"\n            label=\"Question\"\n            rules={[{ required: true, message: 'Please enter the question' }]}\n          >\n            <TextArea \n              rows={3} \n              placeholder=\"Enter your custom question\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"category\"\n            label=\"Category\"\n            initialValue=\"custom\"\n          >\n            <Select>\n              <Option value=\"custom\">Custom</Option>\n              <Option value=\"wms_processes\">WMS Processes</Option>\n              <Option value=\"technical_architecture\">Technical Architecture</Option>\n              <Option value=\"business_requirements\">Business Requirements</Option>\n              <Option value=\"integration\">Integration</Option>\n              <Option value=\"client_specific\">Client Specific</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"priority\"\n            label=\"Priority\"\n            initialValue={2}\n          >\n            <Select>\n              <Option value={1}>High</Option>\n              <Option value={2}>Medium</Option>\n              <Option value={3}>Low</Option>\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ProjectDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}