{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://your-production-url.com/api' : '/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Add auth token if available\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Client APIs\nexport const clientAPI = {\n  getAll: () => api.get('/clients'),\n  getById: id => api.get(`/clients/${id}`),\n  create: data => api.post('/clients', data),\n  update: (id, data) => api.put(`/clients/${id}`, data),\n  delete: id => api.delete(`/clients/${id}`)\n};\n\n// Project APIs\nexport const projectAPI = {\n  getByClientId: clientId => api.get(`/clients/${clientId}/projects`),\n  getById: id => api.get(`/projects/${id}`),\n  create: (clientId, data) => api.post(`/clients/${clientId}/projects`, data),\n  update: (id, data) => api.put(`/projects/${id}`, data),\n  delete: id => api.delete(`/projects/${id}`)\n};\n\n// Market Research APIs\nexport const researchAPI = {\n  conduct: clientId => api.post(`/clients/${clientId}/research`),\n  getByClientId: clientId => api.get(`/clients/${clientId}/research`)\n};\n\n// Question APIs\nexport const questionAPI = {\n  generate: projectId => api.post(`/projects/${projectId}/questions/generate`),\n  getByProjectId: projectId => api.get(`/projects/${projectId}/questions`),\n  updateAnswer: (questionId, data) => api.put(`/questions/${questionId}`, data),\n  addCustom: (projectId, data) => api.post(`/projects/${projectId}/questions`, data)\n};\n\n// WMS Process APIs\nexport const wmsProcessAPI = {\n  getAll: () => api.get('/wms-processes')\n};\n\n// Dashboard APIs\nexport const dashboardAPI = {\n  getSummary: () => api.get('/dashboard')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","console","data","message","clientAPI","getAll","get","getById","id","post","update","put","delete","projectAPI","getByClientId","clientId","researchAPI","conduct","questionAPI","generate","projectId","getByProjectId","updateAnswer","questionId","addCustom","wmsProcessAPI","dashboardAPI","getSummary"],"sources":["/workspace/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://your-production-url.com/api' \n  : '/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    // Add auth token if available\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Client APIs\nexport const clientAPI = {\n  getAll: () => api.get('/clients'),\n  getById: (id) => api.get(`/clients/${id}`),\n  create: (data) => api.post('/clients', data),\n  update: (id, data) => api.put(`/clients/${id}`, data),\n  delete: (id) => api.delete(`/clients/${id}`)\n};\n\n// Project APIs\nexport const projectAPI = {\n  getByClientId: (clientId) => api.get(`/clients/${clientId}/projects`),\n  getById: (id) => api.get(`/projects/${id}`),\n  create: (clientId, data) => api.post(`/clients/${clientId}/projects`, data),\n  update: (id, data) => api.put(`/projects/${id}`, data),\n  delete: (id) => api.delete(`/projects/${id}`)\n};\n\n// Market Research APIs\nexport const researchAPI = {\n  conduct: (clientId) => api.post(`/clients/${clientId}/research`),\n  getByClientId: (clientId) => api.get(`/clients/${clientId}/research`)\n};\n\n// Question APIs\nexport const questionAPI = {\n  generate: (projectId) => api.post(`/projects/${projectId}/questions/generate`),\n  getByProjectId: (projectId) => api.get(`/projects/${projectId}/questions`),\n  updateAnswer: (questionId, data) => api.put(`/questions/${questionId}`, data),\n  addCustom: (projectId, data) => api.post(`/projects/${projectId}/questions`, data)\n};\n\n// WMS Process APIs\nexport const wmsProcessAPI = {\n  getAll: () => api.get('/wms-processes')\n};\n\n// Dashboard APIs\nexport const dashboardAPI = {\n  getSummary: () => api.get('/dashboard')\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}